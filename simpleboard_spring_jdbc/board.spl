create table spring_board(
	bno number(10,0),                     --글번호 
	title varchar2(200) not null,        --제목
	content varchar2(200) not null,      --내용
	writer varchar2(50) not null,        --작성자
	regdate date default sysdate,        --작성날짜
	updatedate date default sysdate      --수정날짜  
);

--pk를 bno로 지정, pk_spring_board : pk 이름
alter table spring_board add constraint pk_spring_board primary key(bno);

--bno에 사용하기 위해 sequence 생성(pk로 사용)
create sequence seq_board;

select*from SPRING_BOARD where bno=1839;

-- 더미 데이터 삽입
insert into SPRING_BOARD(bno,title,content, writer)
(select seq_board.nextval,title,content,writer from SPRING_BOARD);

--갯수 세기
select count(*) from SPRING_BOARD;

-- 페이지 나누기
-- rownum(가상 행번호를 부여하는 방식)
-- rownum 부여 주의 할 점 : order by와 같이 올 때 (orber by 구문의 index 값이 쓰이지 않는 경우)
-- ex) orber by re_ref desc, re_lev asc;
-- ex) index(pk 생성 시 index로 생성됨)

select rownum, bno,title from SPRING_BOARD;

--서브쿼리 방식
select rownum, bno, title from 
(select bno,title from SPRING_BOARD where bno>0 order by bno desc)
where rownum<=10;

--오라클 힌트 방식
select /*+INDEX_DESC(spring_board pk_spring_board)*/ rownum,bno,title
from SPRING_BOARD
where rownum <=10;

-- 1페이지 최신글 10개 가져오기
select rn, bno, title
from (select /*+INDEX_DESC(spring_board pk_spring_board)*/ rownum rn,bno,title
		from SPRING_BOARD
		where rownum <=10)
where rn>0;

-- 2페이지 최신글 10개 가져오기 
select rn, bno, title
from (select /*+INDEX_DESC(spring_board pk_spring_board)*/ rownum rn,bno,title
		from SPRING_BOARD
		where rownum <=20)
where rn>10;


--검색

--제목/내용/작성자 : 단일항목 검색
select rn, bno, title
from (select /*+INDEX_DESC(spring_board pk_spring_board)*/ rownum rn,bno,title
		from SPRING_BOARD
		where title like '%Test%' and rownum <=20)
where rn>10;


--제목 or 내용 / 제목 or 작성자 / 제목 or 내용 or 작성자 : 다중항목 검색
--and가 연산자 중 우선순위가 높기 때문에 다른것들이 먼저 해당되기 위해 괄호를 지정함
select rn, bno, title
from (select /*+INDEX_DESC(spring_board pk_spring_board)*/ rownum rn,bno,title
		from SPRING_BOARD
		where (title like '%식당%' or content like '%김밥%') and rownum <=20)
where rn>10;


--MyBatis 동적 태그


--댓글 테이블
create table spring_reply(
	rno number(10,0) constraint pk_reply primary key, --댓글 글번호
	bno number(10,0) not null, --원본 글번호
	reply varchar2(1000) not null, --댓글 내용
	replyer varchar2(50) not null, --댓글 작성자
	replydate date default sysdate, --댓글 작성일
	updatedate date default sysdate,  -- 댓글 수정일
	constraint fk_reply_board foreign key(bno) references spring_board(bno) --외래키 설정
	
);

create sequence seq_reply;


select * from SPRING_REPLY;

alter table spring_reply rename column replaydate to replydate;

--인덱스 생성
create index idx_reply on spring_reply(bno desc, rno asc);

--속도를 좀 더 줄여서 하는 방법 : orber by가 속도를 많이 잡아먹음
select rno,bno,reply,replyer,replydate,updatedate
from (select /*+INDEX(spring_reply idx_reply)*/ rownum rn,rno,bno,reply,replyer,replydate,updatedate
	from spring_reply
	where bno=1839 and rno>0 and rownum <=20) 
where rn > 10;


--spring_board 테이블의 댓글 수를 저장할 컬럼 추가
alter table spring_board add(replycnt number default 0);

--이미 들어간 댓글 수 삽입하기
update SPRING_BOARD
set replycnt = (select count(rno) 
				from SPRING_REPLY 
				where SPRING_BOARD.bno=spring_reply.bno);


--첨부파일 테이블
create table spring_attach(
   uuid varchar2(100) not null,
   uploadPath varchar2(20) not null,
   fileName varchar2(100) not null,
   fileType char(1) default 'I',
   bno number(10, 0)
);

alter table spring_attach add constraint pk_attach primary key(uuid);
alter table spring_attach add constraint fk_board_attach foreign key(bno)
references spring_board(bno);


select * from SPRING_ATTACH;


--데이터 삭제 시 삭제할 데이터를 참조하는 처리를 어떻게 할 것인지?
-- spring_board bno가 삭제될 때 게시물의 달려있는 댓글은 어떻게 할 것인가
-- 외래키 설정 시 on delete cascade를 붙이면 부모가 삭제될 때 bno을 참조하고 있는 것을 모두 
-- 삭제해달라는 뜻  



