<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.mapper.BoardMapper">
	
	<insert id="insert">
		<!-- 주로 pk의 값을 미리 sql문을 통해 처리해 두고 특정한 이름으로 결과를 보관,
		keyProperty : BoardDTO에 정의해준 변수명 작성 -->
		
		<selectKey keyProperty="bno" order="BEFORE" resultType="int">
			select seq_board.nextval from dual
		</selectKey>
		
		insert into spring_board (bno,title,content,writer)
		values(#{bno}, #{title}, #{content}, #{writer})
	</insert>
	
	
	<!--페이지 나누기 전 전체 책 리스트 불러오기
	<select id="listAll" resultType="com.company.domain.BoardDTO">
		select bno,title,writer,regdate,updatedate from spring_board
		where bno>0 order by bno desc, regdate desc
	</select>-->
	
	
	<!-- 페이지 나눈 후 전체 책 리스트 불러오기 -->
	<select id="listAll" resultType="com.company.domain.BoardDTO">
	<![CDATA[
		select bno,title,writer,regdate,updatedate,replycnt
		from (select /*+INDEX_DESC(spring_board pk_spring_board)*/ rownum rn,bno,title,writer,regdate,updatedate,replycnt
			from SPRING_BOARD
			where 
	]]>
		<!-- trim 부분 부르는 방법 -->
		<include refid="criteria"></include>
				
		<![CDATA[	
			rownum <=(#{pageNum} * #{amount}))
			where rn> (#{pageNum}-1) * #{amount}	
		]]>
	</select>
	
	<!-- 전체 게시물 수 -->
	<select id="totalCnt" resultType="int">
		select count(*) 
		from spring_board
		where 
			<include refid="criteria"></include>
		bno > 0
	</select>


	<select id="read" resultType="com.company.domain.BoardDTO">
		select bno,title,content,writer 
		from spring_board where bno=#{bno}
	</select>


	<update id="update">
		 update spring_board
		 set title=#{title}, content=#{content}, updatedate=sysdate 
		 where bno=#{bno} 
	</update>
	
	
	<delete id="delete">
		delete spring_board where bno=#{bno}
	</delete>
	
	<!-- 댓글 갯수 수정 -->
	<update id="updateReplyCnt">
		update spring_board
		set replycnt = replycnt + #{amount}
		where bno = #{bno}
	</update>
	
	
	<sql id="criteria">
			<trim prefix="(" suffix=") AND" prefixOverrides="OR">
				<!-- cri에 있는 getTypeArr이 넘어감 -->
				<foreach collection="typeArr" item="type">
					<trim prefix="OR">
						<choose>
							<when test="type=='T'.toString()">
								title like '%'||#{keyword}||'%'
							</when>
							<when test="type=='C'.toString()">
								content like '%'||#{keyword}||'%'
							</when>
							<when test="type=='W'.toString()">
								writer like '%'||#{keyword}||'%'
							</when>
						</choose>
					</trim>
				</foreach>		
			</trim>
	</sql>
	
</mapper>






